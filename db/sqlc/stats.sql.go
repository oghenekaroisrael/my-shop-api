// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: stats.sql

package db

import (
	"context"
)

const statsForShops = `-- name: StatsForShops :many
SELECT id, bank_name, icon, account_number, shop_id, created_at FROM banks
WHERE shop_id = $1
ORDER BY id 
LIMIT $2
OFFSET $3
`

type StatsForShopsParams struct {
	ShopID int32 `json:"shop_id"`
	Limit  int32 `json:"limit"`
	Offset int32 `json:"offset"`
}

func (q *Queries) StatsForShops(ctx context.Context, arg StatsForShopsParams) ([]Bank, error) {
	rows, err := q.db.QueryContext(ctx, statsForShops, arg.ShopID, arg.Limit, arg.Offset)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []Bank{}
	for rows.Next() {
		var i Bank
		if err := rows.Scan(
			&i.ID,
			&i.BankName,
			&i.Icon,
			&i.AccountNumber,
			&i.ShopID,
			&i.CreatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
